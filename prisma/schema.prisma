generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum LEVEL {
  N5
  N4
  N3
  N2
  N1
}

enum TYPE {
  word
  kanji
  grammar
  vocabulary
}

model Chapter {
  id             Int              @id @default(autoincrement())
  name           String
  book           Book             @relation(fields: [bookId], references: [id])
  bookId         Int
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  wordCards      WordCard[]
  grammarCard    GrammarCard[]
  kanjiCard      KanjiCard[]
  vocabularyCard VocabularyCard[]
}

model WordCard {
  id                     Int                      @id @default(autoincrement())
  word                   String
  reading                String
  chapter                Chapter?                 @relation(fields: [chapterId], references: [id])
  chapterId              Int?
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  wordCardOnWordCardList WordCardOnWordCardList[]
}

model GrammarCard {
  id                           Int                            @id @default(autoincrement())
  point                        String
  structure                    String
  definition                   String
  examples                     String[]
  chapter                      Chapter?                       @relation(fields: [chapterId], references: [id])
  chapterId                    Int?
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  grammarCardOnGrammarCardList GrammarCardOnGrammarCardList[]
}

model Book {
  id        Int       @id @default(autoincrement())
  type      TYPE      @default(kanji)
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  chapters  Chapter[]
}

model KanjiCard {
  id                       Int                        @id @default(autoincrement())
  kanji                    String
  onyomi                   String[]
  kunyomi                  String[]
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  chapter                  Chapter?                   @relation(fields: [chapterId], references: [id])
  chapterId                Int?
  kanjiCardOnKanjiCardList KanjiCardOnKanjiCardList[]
}

model KanjiCardList {
  id                       Int                        @id @default(autoincrement())
  name                     String
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  kanjiCardOnKanjiCardList KanjiCardOnKanjiCardList[]
}

model KanjiCardOnKanjiCardList {
  kanjiCard       KanjiCard     @relation(fields: [kanjiCardId], references: [id])
  kanjiCardId     Int
  kanjiCardList   KanjiCardList @relation(fields: [kanjiCardListId], references: [id])
  kanjiCardListId Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@id([kanjiCardId, kanjiCardListId])
}

model WordCardList {
  id                     Int                      @id @default(autoincrement())
  name                   String
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  wordCardOnWordCardList WordCardOnWordCardList[]
}

model WordCardOnWordCardList {
  wordCard       WordCard     @relation(fields: [wordCardId], references: [id])
  wordCardId     Int
  wordCardList   WordCardList @relation(fields: [wordCardListId], references: [id])
  wordCardListId Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@id([wordCardId, wordCardListId])
}

model GrammarCardList {
  id                           Int                            @id @default(autoincrement())
  name                         String
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  grammarCardOnGrammarCardList GrammarCardOnGrammarCardList[]
}

model GrammarCardOnGrammarCardList {
  grammarCard       GrammarCard     @relation(fields: [grammarCardId], references: [id])
  grammarCardId     Int
  grammarCardList   GrammarCardList @relation(fields: [grammarCardListId], references: [id])
  grammarCardListId Int
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  @@id([grammarCardId, grammarCardListId])
}

model VocabularyCard {
  id                                 Int                                  @id @default(autoincrement())
  word                               String
  meaning                            String
  chapter                            Chapter?                             @relation(fields: [chapterId], references: [id])
  chapterId                          Int?
  createdAt                          DateTime                             @default(now())
  updatedAt                          DateTime                             @updatedAt
  VocabularyCardOnVocabularyCardList VocabularyCardOnVocabularyCardList[]
}

model VocabularyCardList {
  id                                 Int                                  @id @default(autoincrement())
  name                               String
  createdAt                          DateTime                             @default(now())
  updatedAt                          DateTime                             @updatedAt
  VocabularyCardOnVocabularyCardList VocabularyCardOnVocabularyCardList[]
}

model VocabularyCardOnVocabularyCardList {
  vocabularyCard       VocabularyCard     @relation(fields: [vocabularyCardId], references: [id])
  vocabularyCardId     Int
  vocabularyCardList   VocabularyCardList @relation(fields: [vocabularyCardListId], references: [id])
  vocabularyCardListId Int
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt

  @@id([vocabularyCardId, vocabularyCardListId])
}
